{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/%D0%9F%D0%B5%D1%82%D1%80%D0%BE%D0%B2/Desktop/project1/client/app/components/gender.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface GenderOptionProps {\n    id: number;\n    title: string;\n    genderSelection: string[];\n    onGenderSelect: (id: number, selectedGender: string) => void;\n}\n\nconst GenderOptions: React.FC<GenderOptionProps> = ({\n    id,\n    title,\n    genderSelection,\n    onGenderSelect,\n}) => {\n    const [selectedGender, setSelectedGender] = useState<string | null>(null);\n\n    const handleGenderSelect = (selectedItem: string) => {\n        setSelectedGender(selectedItem);\n        onGenderSelect(id, selectedItem);\n    };\n\n    return (\n        <div className=\"gender\">\n            <span className=\"gender-label\">{title}</span>\n            <div className=\"gender-options\">\n                {genderSelection.map((option, index) => (\n                    <input\n                        key={index}\n                        onClick={() => handleGenderSelect(option)}\n                        className={`border ${selectedGender === option ? 'selected' : ''}`}\n                        type=\"button\"\n                        value={option}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GenderOptions;\n"],"names":[],"mappings":";;;;AAAA;;;AASA,MAAM,gBAA6C,CAAC,EAChD,EAAE,EACF,KAAK,EACL,eAAe,EACf,cAAc,EACjB;IACG,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpE,MAAM,qBAAqB,CAAC;QACxB,kBAAkB;QAClB,eAAe,IAAI;IACvB;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAK,WAAU;0BAAgB;;;;;;0BAChC,8OAAC;gBAAI,WAAU;0BACV,gBAAgB,GAAG,CAAC,CAAC,QAAQ,sBAC1B,8OAAC;wBAEG,SAAS,IAAM,mBAAmB;wBAClC,WAAW,CAAC,OAAO,EAAE,mBAAmB,SAAS,aAAa,IAAI;wBAClE,MAAK;wBACL,OAAO;uBAJF;;;;;;;;;;;;;;;;AAU7B;uCAEe"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/%D0%9F%D0%B5%D1%82%D1%80%D0%BE%D0%B2/Desktop/project1/client/app/main/page.tsx"],"sourcesContent":["'use client';\nimport { useState } from 'react';\nimport GenderOptions from '../components/gender';\nimport { useRouter } from 'next/navigation';\nimport { useDispatch } from 'react-redux';\nimport { sendUserQuery } from '../redux/slice';\nimport './style.scss';\ninterface GenderOption {\n    id: number;\n    title: string;\n    gender: string | null;\n    genderSelection: string[];\n}\n\nconst Main = () => {\n    const router = useRouter();\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState<string>('');\n    const [selectedGenders, setSelectedGenders] = useState<GenderOption[]>([\n        { id: 1, title: 'Ваш пол', gender: null, genderSelection: ['М', 'Ж'] },\n        { id: 2, title: 'Пол собеседника', gender: null, genderSelection: ['М', 'Ж'] }\n    ]);\n\n    // Обработка выбора пола\n    const handleGenderSelect = (id: number, selectedGender: string) => {\n        setSelectedGenders(prev =>\n            prev.map(option => option.id === id ? { ...option, gender: selectedGender } : option)\n        );\n    };\n\n    // Инициация поиска\n    const initiateSearch = () => {\n        if (!name.trim()) {\n            alert('Введите ваше имя.');\n            return;\n        }\n\n        if (selectedGenders.some(option => !option.gender)) {\n            alert('Выберите все параметры пола.');\n            return;\n        }\n\n        dispatch(sendUserQuery({\n            localName: name,\n            OwnGender: selectedGenders[0].gender || null,\n            PartnerGender: selectedGenders[1].gender || null\n        }));\n\n        router.push('/loader');\n    };\n\n    return (\n        <main className=\"main-content\">\n            <div className=\"container\">\n                <div className='container'>\n                    <div className=\"intro-section\">\n                        <h1>\n                            В нашем мире анонимных знакомств каждое лицо - загадка, каждый человек - история.\n                        </h1>\n                        <span>\n                            Помните, ответственность за вашу безопасность лежит на вас. Не передавайте личные данные и будьте осторожны.\n                        </span>\n                    </div>\n                </div>\n                <form className=\"search-form\" onSubmit={(e) => { e.preventDefault(); initiateSearch(); }}>\n                    <div className=\"form-section\">\n                        {selectedGenders.map(option => (\n                            <GenderOptions\n                                key={option.id}\n                                id={option.id}\n                                title={option.title}\n                                genderSelection={option.genderSelection}\n                                onGenderSelect={handleGenderSelect}\n                            />\n                        ))}\n                    </div>\n                    <div className='search-name'>\n                        <span className=\"gender-label\">Ваше имя</span>\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            className=\"text-input\"\n                            placeholder=\"Ваше имя\"\n                        />\n                    </div>\n                    <input\n                        type=\"button\"\n                        onClick={initiateSearch}\n                        value=\"Поиск\"\n                        className=\"search-button\"\n                    />\n                </form>\n            </div>\n        </main>\n    );\n};\n\nexport default Main;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AADA;AAJA;;;;;;;;AAcA,MAAM,OAAO;IACT,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;QACnE;YAAE,IAAI;YAAG,OAAO;YAAW,QAAQ;YAAM,iBAAiB;gBAAC;gBAAK;aAAI;QAAC;QACrE;YAAE,IAAI;YAAG,OAAO;YAAmB,QAAQ;YAAM,iBAAiB;gBAAC;gBAAK;aAAI;QAAC;KAChF;IAED,wBAAwB;IACxB,MAAM,qBAAqB,CAAC,IAAY;QACpC,mBAAmB,CAAA,OACf,KAAK,GAAG,CAAC,CAAA,SAAU,OAAO,EAAE,KAAK,KAAK;oBAAE,GAAG,MAAM;oBAAE,QAAQ;gBAAe,IAAI;IAEtF;IAEA,mBAAmB;IACnB,MAAM,iBAAiB;QACnB,IAAI,CAAC,KAAK,IAAI,IAAI;YACd,MAAM;YACN;QACJ;QAEA,IAAI,gBAAgB,IAAI,CAAC,CAAA,SAAU,CAAC,OAAO,MAAM,GAAG;YAChD,MAAM;YACN;QACJ;QAEA,SAAS,CAAA,GAAA,qHAAA,CAAA,gBAAa,AAAD,EAAE;YACnB,WAAW;YACX,WAAW,eAAe,CAAC,EAAE,CAAC,MAAM,IAAI;YACxC,eAAe,eAAe,CAAC,EAAE,CAAC,MAAM,IAAI;QAChD;QAEA,OAAO,IAAI,CAAC;IAChB;IAEA,qBACI,8OAAC;QAAK,WAAU;kBACZ,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;0CAAG;;;;;;0CAGJ,8OAAC;0CAAK;;;;;;;;;;;;;;;;;8BAKd,8OAAC;oBAAK,WAAU;oBAAc,UAAU,CAAC;wBAAQ,EAAE,cAAc;wBAAI;oBAAkB;;sCACnF,8OAAC;4BAAI,WAAU;sCACV,gBAAgB,GAAG,CAAC,CAAA,uBACjB,8OAAC,4HAAA,CAAA,UAAa;oCAEV,IAAI,OAAO,EAAE;oCACb,OAAO,OAAO,KAAK;oCACnB,iBAAiB,OAAO,eAAe;oCACvC,gBAAgB;mCAJX,OAAO,EAAE;;;;;;;;;;sCAQ1B,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAK,WAAU;8CAAe;;;;;;8CAC/B,8OAAC;oCACG,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oCACvC,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAGpB,8OAAC;4BACG,MAAK;4BACL,SAAS;4BACT,OAAM;4BACN,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAMlC;uCAEe"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}