{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/khami/OneDrive/Desktop/next/client/app/components/gender.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, use, useState } from 'react';\r\ninterface ModelGenderOptions {\r\n    id: number;\r\n    title: string;\r\n    genderSelection: string[];\r\n}\r\n\r\nconst GenderOptions: React.FC<ModelGenderOptions> = ({ id, title, genderSelection }) => {\r\n    return (\r\n        <>\r\n            <div className=\"gender\">\r\n                <span className=\"gender-label\">{title}</span>\r\n                <div className=\"gender-options\">\r\n                    {\r\n                        genderSelection.map((item,index) => <input key={index}  className=\"border\" type=\"button\" value={item} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default GenderOptions;"],"names":[],"mappings":";;;;;AAOA,MAAM,gBAA8C,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;IAC/E,qBACI;kBACI,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;8BAEP,gBAAgB,GAAG,CAAC,CAAC,MAAK,sBAAU,6LAAC;4BAAmB,WAAU;4BAAS,MAAK;4BAAS,OAAO;2BAAhD;;;;;;;;;;;;;;;;;AAMxE;KAbM;uCAcS"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/khami/OneDrive/Desktop/next/client/app/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\nconst socket = io('http://localhost:4000');\r\n\r\nexport default socket;"],"names":[],"mappings":";;;AAAA;AAAA;;AACA,MAAM,SAAS,CAAA,GAAA,kLAAA,CAAA,KAAE,AAAD,EAAE;uCAEH"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/khami/OneDrive/Desktop/next/client/app/loader/page.tsx"],"sourcesContent":["'use client'\r\n\r\nconst Loader = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"container\">\r\n                    <span>Ждем...</span>\r\n                </div>\r\n            </>\r\n        </>\r\n    )\r\n}\r\nexport default Loader;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,SAAS;IAGX,qBACI;kBACI,cAAA;sBACI,cAAA,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;8BAAK;;;;;;;;;;;;;AAK1B;KAZM;uCAaS"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/khami/OneDrive/Desktop/next/client/app/main/page.tsx"],"sourcesContent":["'use client'\r\nimport { useState, useEffect } from 'react';\r\nimport img from '../../src/assets/image/pngwing 1.png';\r\nimport GenderOptions from '../components/gender';\r\nimport Chat from \"@/app/chat/page\";\r\nimport socket from '@/app/socket';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport Loader from '../loader/page';\r\ninterface ModelGenderOptions {\r\n    id: number;\r\n    title: string;\r\n    gender: null | string;\r\n    genderSelection: string[]\r\n}\r\nconst Main = () => {\r\n    const router = useRouter()\r\n    const [room, setRoom] = useState<number>(0)\r\n    const [message, setMeassge] = useState(\"\")\r\n    const [name, setName] = useState('')\r\n    const [search, setSearch] = useState<boolean>(false)\r\n    const initiateSearch = () => {\r\n        router.push('/loader');\r\n        socket.emit('createRoom', name);\r\n        setSearch(true)\r\n    }\r\n    useEffect(() => {\r\n        socket.on('roomCreated', (count) => {\r\n            setRoom(count)\r\n        });\r\n\r\n        return () => {\r\n            socket.off('roomCreated');\r\n        };\r\n    }, []);\r\n\r\n    const [genderOptions, setGenderOptions] = useState<ModelGenderOptions[]>([\r\n        {\r\n            id: 1,\r\n            title: 'Ваш пол',\r\n            gender: null,\r\n            genderSelection: ['М', 'Ж']\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Пол собеседника',\r\n            gender: null,\r\n            genderSelection: ['М', 'Ж']\r\n        },\r\n    ])\r\n\r\n    // const hangleClick = (id, gender) => {\r\n    //     setGenderOptions(genderOptions.map((option) =>\r\n    //         option.id === id ? { ...option, gender: gender } : { ...option }))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                search && room !== 2 ? <Loader /> : <main className=\"main-content\">\r\n                    <div className=\"container\">\r\n                        <div className=\"intro-section-container\">\r\n                            <div className=\"intro-section\">\r\n                                <h1>{room}В нашем мире анонимных знакомств каждое лицо - загадка, каждый человек - история.</h1>\r\n                                <span>Помните, ответственность за вашу безопасность лежит на вас. Не передавайте личные данные и будьте осторожны.</span>\r\n                            </div>\r\n                            {/* <img className=\"main-image\" src={img} alt=\"\" /> */}\r\n                        </div>\r\n                        <form className=\"search-form\" action=\"\">\r\n                            <div className=\"form-section\">\r\n                                {genderOptions.map(({ id, title, genderSelection }) => <GenderOptions key={id} id={id} title={title} genderSelection={genderSelection} />)}\r\n                            </div>\r\n                            <input type=\"text\" onChange={(e) => setName(e.target.value)} className='text-input' placeholder='Ваше имя' />\r\n                            <input type='button' onClick={() => initiateSearch()} value='Поиск' className=\"search-button\" />\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Main;"],"names":[],"mappings":";;;;AACA;AAEA;AAEA;AAEA;AACA;;;AARA;;;;;;AAeA,MAAM,OAAO;;IACT,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9C,MAAM,iBAAiB;QACnB,OAAO,IAAI,CAAC;QACZ,gHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,cAAc;QAC1B,UAAU;IACd;IACA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,gHAAA,CAAA,UAAM,CAAC,EAAE,CAAC;kCAAe,CAAC;oBACtB,QAAQ;gBACZ;;YAEA;kCAAO;oBACH,gHAAA,CAAA,UAAM,CAAC,GAAG,CAAC;gBACf;;QACJ;yBAAG,EAAE;IAEL,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;QACrE;YACI,IAAI;YACJ,OAAO;YACP,QAAQ;YACR,iBAAiB;gBAAC;gBAAK;aAAI;QAE/B;QACA;YACI,IAAI;YACJ,OAAO;YACP,QAAQ;YACR,iBAAiB;gBAAC;gBAAK;aAAI;QAC/B;KACH;IAED,wCAAwC;IACxC,qDAAqD;IACrD,6EAA6E;IAC7E,IAAI;IAEJ,qBACI;kBAEQ,UAAU,SAAS,kBAAI,6LAAC,yHAAA,CAAA,UAAM;;;;iCAAM,6LAAC;YAAK,WAAU;sBAChD,cAAA,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;;wCAAI;wCAAK;;;;;;;8CACV,6LAAC;8CAAK;;;;;;;;;;;;;;;;;kCAId,6LAAC;wBAAK,WAAU;wBAAc,QAAO;;0CACjC,6LAAC;gCAAI,WAAU;0CACV,cAAc,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,iBAAK,6LAAC,+HAAA,CAAA,UAAa;wCAAU,IAAI;wCAAI,OAAO;wCAAO,iBAAiB;uCAA3C;;;;;;;;;;0CAE/E,6LAAC;gCAAM,MAAK;gCAAO,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCAAG,WAAU;gCAAa,aAAY;;;;;;0CAChG,6LAAC;gCAAM,MAAK;gCAAS,SAAS,IAAM;gCAAkB,OAAM;gCAAQ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAQ1G;GAnEM;;QACa,qIAAA,CAAA,YAAS;;;KADtB;uCAoES"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}